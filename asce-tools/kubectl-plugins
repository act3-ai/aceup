#!/usr/bin/env bash

############################################################
# Homebrew Utility Functions
############################################################
# From https://github.com/Homebrew/brew/blob/92d2cec5fa952c32b544faa04e671099d2dc3ff1/Library/Homebrew/brew.sh#L126

ohai() {
	# Check whether stdout is a tty.
	if [[ -n "${HOMEBREW_COLOR}" || (-t 1 && -z "${HOMEBREW_NO_COLOR}") ]]; then
		echo -e "\\033[34m==>\\033[0m \\033[1m$*\\033[0m" # blue arrow and bold text
	else
		echo "==> $*"
	fi
}

opoo() {
	# Check whether stderr is a tty.
	if [[ -n "${HOMEBREW_COLOR}" || (-t 2 && -z "${HOMEBREW_NO_COLOR}") ]]; then
		echo -ne "\\033[4;33mWarning\\033[0m: " >&2 # highlight Warning with underline and yellow color
	else
		echo -n "Warning: " >&2
	fi
	if [[ $# -eq 0 ]]; then
		cat >&2
	else
		echo "$*" >&2
	fi
}

bold() {
	# Check whether stderr is a tty.
	if [[ -n "${HOMEBREW_COLOR}" || (-t 2 && -z "${HOMEBREW_NO_COLOR}") ]]; then
		echo -e "\\033[1m""$*""\\033[0m"
	else
		echo "$*"
	fi
}

onoe() {
	# Check whether stderr is a tty.
	if [[ -n "${HOMEBREW_COLOR}" || (-t 2 && -z "${HOMEBREW_NO_COLOR}") ]]; then
		echo -ne "\\033[4;31mError\\033[0m: " >&2 # highlight Error with underline and red color
	else
		echo -n "Error: " >&2
	fi
	if [[ $# -eq 0 ]]; then
		cat >&2
	else
		echo "$*" >&2
	fi
}

odie() {
	onoe "$@"
	exit 1
}

# Homebrew's bin directory is used for symlinks (krew packages) or binary storage (crossplane)
BREW_BIN=$(brew --prefix)/bin
mkdir -p "$BREW_BIN"

# KREW_ROOT must be set or defaulted here
# TODO: warn user if KREW_ROOT is unset
KREW_ROOT="${KREW_ROOT:-$HOME/.krew}"

# Kubectl Plugins
kubectl_plugins=(
	'view-secret'
	'view-allocations'
	'konfig'
)

ohai "Installing kubectl plugins:"
echo "${kubectl_plugins[@]}"

ohai "$ kubectl krew update"
kubectl krew update

for name in "${kubectl_plugins[@]}"; do
	ohai "$ krew install $name"
	if output=$(kubectl krew install "$name" 2>&1); then
		if [[ "$output" == *"it is already installed"* ]]; then
			echo "Already installed: $name"
			continue
		fi
		[[ -n "$output" ]] && echo "$output" # still print output in case there was a warning
		echo "Installed $name"
	else
		onoe "$output"
	fi
done

# This circumvents requiring KREW_ROOT to be set in user's profile
# The plugins will be accessible from Homebrew's bin
ohai "Symlinking krew plugins into \"$BREW_BIN\""
ln -s -f -v "$KREW_ROOT/bin/*" "$BREW_BIN"


ohai "Installing the Crossplane CLI:"

ohai "$ https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh | sh"
if output=$(curl -sL "https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh" | sh); then
	echo "Downloaded the Crossplane CLI"
else
	opoo "$output"
fi

ohai "$ mv crossplane $BREW_BIN"
mv crossplane "$BREW_BIN"

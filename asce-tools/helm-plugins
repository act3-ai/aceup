#!/usr/bin/env bash

############################################################
# Homebrew Utility Functions
############################################################
# From https://github.com/Homebrew/brew/blob/92d2cec5fa952c32b544faa04e671099d2dc3ff1/Library/Homebrew/brew.sh#L126

ohai() {
	# Check whether stdout is a tty.
	if [[ -n "${HOMEBREW_COLOR}" || (-t 1 && -z "${HOMEBREW_NO_COLOR}") ]]; then
		echo -e "\\033[34m==>\\033[0m \\033[1m$*\\033[0m" # blue arrow and bold text
	else
		echo "==> $*"
	fi
}

opoo() {
	# Check whether stderr is a tty.
	if [[ -n "${HOMEBREW_COLOR}" || (-t 2 && -z "${HOMEBREW_NO_COLOR}") ]]; then
		echo -ne "\\033[4;33mWarning\\033[0m: " >&2 # highlight Warning with underline and yellow color
	else
		echo -n "Warning: " >&2
	fi
	if [[ $# -eq 0 ]]; then
		cat >&2
	else
		echo "$*" >&2
	fi
}

bold() {
	# Check whether stderr is a tty.
	if [[ -n "${HOMEBREW_COLOR}" || (-t 2 && -z "${HOMEBREW_NO_COLOR}") ]]; then
		echo -e "\\033[1m""$*""\\033[0m"
	else
		echo "$*"
	fi
}

onoe() {
	# Check whether stderr is a tty.
	if [[ -n "${HOMEBREW_COLOR}" || (-t 2 && -z "${HOMEBREW_NO_COLOR}") ]]; then
		echo -ne "\\033[4;31mError\\033[0m: " >&2 # highlight Error with underline and red color
	else
		echo -n "Error: " >&2
	fi
	if [[ $# -eq 0 ]]; then
		cat >&2
	else
		echo "$*" >&2
	fi
}

odie() {
	onoe "$@"
	exit 1
}

# Helm Plugins
# https://github.com/jkroepke/helm-secrets/wiki/Installation#using-helm-plugin-manager
# https://github.com/chartmuseum/helm-push#install
# https://github.com/aslafy-z/helm-git#install
# https://github.com/databus23/helm-diff#using-helm-plugin-manager--23x
# https://github.com/hypnoglow/helm-s3#install
helm_plugins=(
	'secrets=https://github.com/jkroepke/helm-secrets'
	'cm-push=https://github.com/chartmuseum/helm-push'
	's3=https://github.com/aslafy-z/helm-git'
	'diff=https://github.com/databus23/helm-diff'
	's3=https://github.com/hypnoglow/helm-s3'
)

ohai "Installing helm plugins:"
echo "${helm_plugins[@]}"

for entry in "${helm_plugins[@]}"; do
	plugin=${entry%%"="*}
	repo=${entry#*"="}
	ohai "$ helm plugin install $repo"
	if output=$(helm plugin install "$repo" 2>&1); then
		[[ -n "$output" ]] && echo "$output" # still print output in case there was a warning
		echo "Installed $plugin"
	elif [[ "$output" == "Error: plugin already exists" ]]; then
		echo "Already installed: $plugin"
		ohai "$ helm plugin update $plugin"
		helm plugin update "$plugin"
	else
		onoe "$output"
	fi
done
